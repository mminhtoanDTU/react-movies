{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","Logic/SearchMovie.jsx","Pages/SearchPage/SearchPage.element.jsx","Pages/SearchPage/SearchPage.jsx","Logic/FormatString.js"],"names":["module","exports","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","SearchMovie","Data","string","console","log","phimbo","Title","styled","h1","SearchPage","Loading","useState","setListSearched","query","setQuery","search","useLocation","useEffect","URLSearchParams","queryMovie","get","toLowerCase","normalize","replace","a","dataSearched","getListSearched"],"mappings":"+GAAAA,EAAOC,QAAU,EAAQ,M,8DCAzB,SAASC,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,MACjB,MAAOC,GAEP,YADAP,EAAOO,GAILF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,GAIxB,SAASS,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMc,EAAGK,MAAMJ,EAAME,GAEzB,SAASd,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,GAGlE,SAASJ,EAAOgB,GACdrB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASgB,GAGnEjB,OAAMkB,O,2BC5BL,SAASC,EAAYC,EAAMC,GAG9B,OADAC,QAAQC,IAAIH,EAAKI,QADE,G,aCFVC,E,KAAQC,EAAOC,GAAV,uE,eCoCHC,UA9Bf,YAAwC,IAAlBR,EAAiB,EAAjBA,KAClB,GADmC,EAAXS,QACgBC,mBAAS,KAAjD,mBAAqBC,GAArB,WACA,EAA0BD,mBAAS,IAAnC,mBAAOE,EAAP,KAAcC,EAAd,KACMC,EAAWC,cAAXD,OAoBN,OAlBAE,qBAAU,WACN,IAAMJ,EAAQ,IAAIK,gBAAgBH,GAC5BI,EAA0BN,EAAMO,IAAI,KCdnCC,cACNC,UAAU,OACVC,QAAQ,mBAAoB,IAC5BA,QAAQ,UAAM,KACdA,QAAQ,UAAM,KDWfT,EAASK,KAEV,CAACN,IAEJI,qBAAU,WAAM,kCACZ,4BAAAO,EAAA,yDACQvB,IAAS,GADjB,gCAEmCD,EAAYC,GAF/C,OAEcwB,EAFd,OAGQtB,QAAQC,IAAI,UAAWqB,GACvBb,EAAgBa,GAJxB,4CADY,uBAAC,WAAD,wBAQZC,KACD,IAGC,mCACI,eAACpB,EAAD,sDAA8BO","file":"static/js/3.2958c628.chunk.js","sourcesContent":["module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import FormatString from \"./FormatString\";\r\n\r\n\r\nexport function SearchMovie(Data, string) {\r\n    const ListSearch = [];\r\n    console.log(Data.phimbo)\r\n    return ListSearch;\r\n}","import styled from \"styled-components\";\r\n\r\nexport const Title = styled.h1`\r\n    font-size: 30px;\r\n    color: #F1B722;\r\n`","import React, { useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport FormatString from '../../Logic/FormatString';\r\nimport { SearchMovie } from '../../Logic/SearchMovie';\r\nimport { Title } from './SearchPage.element';\r\nimport Loadings from '../../components/Loading'\r\n\r\n\r\nfunction SearchPage({ Data, Loading }) {\r\n    const [listSearched, setListSearched] = useState([]);\r\n    const [query, setQuery] = useState('');\r\n    let { search } = useLocation();\r\n\r\n    useEffect(() => {\r\n        const query = new URLSearchParams(search);\r\n        const queryMovie = FormatString(query.get('q'));\r\n        setQuery(queryMovie);\r\n\r\n    }, [query])\r\n\r\n    useEffect(() => {\r\n        async function getListSearched() {\r\n            if (Data !== {}) {\r\n                const dataSearched = await SearchMovie(Data, query);\r\n                console.log('return ', dataSearched);\r\n                setListSearched(dataSearched);\r\n            }\r\n        }\r\n        getListSearched();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Title>Kết quả tìm kiếm cho: {query}</Title>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SearchPage;","export default function FormatString(str) {\r\n    return str.toLowerCase()\r\n        .normalize(\"NFD\")\r\n        .replace(/[\\u0300-\\u036f]/g, \"\")\r\n        .replace(/đ/g, \"d\")\r\n        .replace(/Đ/g, \"D\");\r\n}"],"sourceRoot":""}